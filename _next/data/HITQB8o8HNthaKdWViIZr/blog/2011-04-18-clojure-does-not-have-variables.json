{"pageProps":{"post":{"title":"Clojure Does Not Have Variables","slug":"blog/2011-04-18-clojure-does-not-have-variables","published":true,"datePublished":"2011-04-18T00:00:00.000Z","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Clojure, like many functional languages, does not have \\\"variables\\\". It has \\\"bindings\\\", but they cannot vary - there is no concept of reassignment. But what does that really mean?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When you see code like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-clojure\",\n      children: _jsxs(_components.code, {\n        className: \"language-clojure\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"x \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"something\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n      y \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"blah x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n      x \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"more \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"stuff x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"whatever x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"you may very well think \\\"you are re-binding x - that's the same thing as a variable, for all intents and purposes\\\". And I agree that it looks that way. But it's not.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's the difference:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# python\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"foo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"23\"\n        }), \"\\n  y \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"lambda\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" x\\n  x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"44\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" y\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"print\"\n        }), \" foo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ruby\",\n      children: _jsxs(_components.code, {\n        className: \"language-ruby\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"# ruby\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"def\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token method-definition\",\n          children: _jsx(_components.span, {\n            className: \"token function\",\n            children: \"foo\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n  x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"23\"\n        }), \"\\n  y \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" lambda \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" x \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"44\"\n        }), \"\\n  y\\n\\nputs foo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"call\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// javascript\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"foo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"23\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"y\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  x \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"44\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"alert\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"foo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-clojure\",\n      children: _jsxs(_components.code, {\n        className: \"language-clojure\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"; clojure\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"defn\"\n        }), \" foo \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"x \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"23\"\n        }), \"\\n        y \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"fn\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" x\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        x \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"44\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n    y\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"println\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"foo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One of these things is not like the others... one of these things is not the same. (I can't remember which childhood TV show that's from).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Three of the snippets above print 44. The other prints 23. That may not seem very significant, but it is. Immutability runs deeper than just unmodifiable vectors and maps.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n"}}},"__N_SSG":true}